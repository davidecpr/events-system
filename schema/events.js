'use strict'

const S = require('fluent-json-schema')
const fp = require('fastify-plugin')

module.exports = fp(async (fastify, opts) => {
  fastify.addSchema(
    S.object()
      .id('eventShema')
      .title('Event schema')
      .description('Schema for event validation')
      .prop('name', S.string().minLength(5).maxLength(20).required())
      .prop('description', S.string().minLength(5).maxLength(50).required())
      .prop('category', S.raw({ type: 'string', pattern: '^[0-9a-fA-F]{24}$' }).required())
      .prop('manager', S.raw({ type: 'string', pattern: '^[0-9a-fA-F]{24}$' }).required())
      .prop('state', S.string().enum(['Bozza', 'Pubblico']).required())
      .prop('maxInvited', S.number().minimum(1).raw({ nullable: true }))
      .prop('dateTime', S.string().format(S.FORMATS.DATE_TIME).required())
      .prop('startDateTime', S.raw({ type: 'string', format: 'date-time' }))
      .prop('endDateTime', S.raw({ type: 'string', format: 'date-time' }))
      .prop('type', S.string().enum(['Offline', 'Online']).required())
      .prop('tags', S.array().items(S.string()).minItems(1).required())
      .prop('street', S.string().enum(['Via', 'Viale', 'Piazza', 'Corso']).required())
      .prop('streetName', S.string().minLength(5).required())
      .prop('number', S.number().minimum(1).required())
      .prop('country', S.string().minLength(5).required())
      .prop('city', S.string().minLength(3).required())
      .prop('zipcode', S.raw({ type: 'string', pattern: '^\\d{5}$' }).required())
      .prop('link', S.string().format(S.FORMATS.URI).required())
      .prop('isPublic', S.boolean().required())
  )

  fastify.addSchema(
    S.object()
      .id('eventSchemaResponse')
      .title('Event response schema')
      .description('Schema for event response validation')
      .prop('_id', S.string())
      .prop('name', S.string())
      .prop('description', S.string())
      .prop('images', S.oneOf([S.string(), S.array()]))
      .prop('category', S.string())
      .prop('manager', S.string())
      .prop('state', S.string())
      .prop('maxInvited', S.number())
      .prop('dateTime', S.string())
      .prop('startDateTime', S.string())
      .prop('endDateTime', S.string())
      .prop('type', S.string())
      .prop('tags', S.array().items(S.string()))
      .prop('street', S.string())
      .prop('streetName', S.string())
      .prop('number', S.number())
      .prop('country', S.string())
      .prop('city', S.string())
      .prop('zipcode', S.string())
      .prop('link', S.string())
      .prop('isPublic', S.boolean())
  )

  fastify.addSchema(
    S.object()
      .id('eventSchemaMultipart')
      .title('Event multipart schema')
      .description('Schema for event upload photos validation')
      .prop('photos', S.oneOf([S.object().prop('file', S.object().required()), S.array().items(S.object().prop('file', S.object().required()))]).required())
  )
})
