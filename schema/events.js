'use strict'

const S = require('fluent-json-schema')
const fp = require('fastify-plugin')

module.exports = fp(async (fastify, opts) => {
  fastify.addSchema(
    S.object()
      .id('eventSchema')
      .title('Schema for event')
      .prop('name', S.string().required())
      .prop('description', S.string().required())
      .prop('categories', S.array().required())
      .prop('manager', S.string().required())
      .prop('state', S.string().default('Bozza').required())
      .prop('maxInvited', S.integer().maximum(10).required())
      .prop('dateTime', S.string().required())
      .prop('duration', S.string().required())
      .prop('type', S.string().default('Online').required())
      .prop('tags', S.array().required())
      .prop('address', S.string().required())
      .prop('link', S.string().required())
      .prop('isPublic', S.boolean().required())
  )

  fastify.addSchema(
    S.object()
      .id('eventSchemaResponse')
      .title('Schema for event response')
      .prop('_id', S.string())
      .prop('name', S.oneOf([S.string(), S.object().prop('value', S.string())]))
      .prop('description', S.string())
      .prop('images', S.oneOf([S.string(), S.array()]))
      .prop('categories', S.oneOf([S.string(), S.array()]))
      .prop('manager', S.string())
      .prop('state', S.string())
      .prop('maxInvited', S.integer())
      .prop('dateTime', S.string())
      .prop('duration', S.string())
      .prop('type', S.string())
      .prop('tags', S.oneOf([S.string(), S.array()]))
      .prop('address', S.string())
      .prop('link', S.string())
      .prop('isPublic', S.boolean())
  )

  fastify.addSchema(
    S.object()
      .id('eventSchemaMultipart')
      .title('Schema for event')
      .prop('name', S.object().required().prop('value', S.string().required()))
      .prop('description', S.object().required().prop('value', S.string().required()))
      .prop('images', S.oneOf([S.array(), S.object().prop('file', S.object().required())])).required()
      .prop('categories', S.oneOf([S.array(), S.object().prop('value', S.string())])).required()
      .prop('manager', S.object().required().prop('value', S.string().required()))
      .prop('state', S.object().required().prop('value', S.string().required()))
      .prop('maxInvited', S.object().required().prop('value', S.integer().required()))
      .prop('dateTime', S.object().required().prop('value', S.string().required()))
      .prop('duration', S.object().required().prop('value', S.string().required()))
      .prop('type', S.object().required().prop('value', S.string().required()))
      .prop('tags', S.oneOf([S.array(), S.object().prop('value', S.string())])).required()
      .prop('address', S.object().required().prop('value', S.string().required()))
      .prop('link', S.object().required().prop('value', S.string().required()))
      .prop('isPublic', S.object().required().prop('value', S.boolean().required()))
  )
})
